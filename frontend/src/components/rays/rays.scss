:root {
	--stripe-color: #fff;
	--bg: var(--stripe-color);
	--maincolor: var(--bg);
}

.rays {
	width: 100%;
	height: auto;
	position: relative;
	margin-bottom: 50px;

	&__content {
		position: absolute;
		inset: 0;
		width: 100%;
		height: 100%;
		display: flex;
		place-content: center;
		place-items: center;
		flex-flow: column;
		gap: 4.5%;
		text-align: center;
		mix-blend-mode: difference;
		filter: invert(1);
	}

	&__hero {
		width: 100%;
		height: 100%;
		min-height: 80vh;
		position: relative;
		display: flex;
		place-content: center;
		place-items: center;
		--stripes: repeating-linear-gradient(100deg, var(--stripe-color) 0%, var(--stripe-color) 7%, transparent 10%, transparent 12%, var(--stripe-color) 16%);
		--rainbow: repeating-linear-gradient(100deg, #60a5fa 10%, #e879f9 15%, #60a5fa 20%, #5eead4 25%, #60a5fa 30%);
		background-image: var(--stripes), var(--rainbow);
		background-size: 300%, 200%;
		background-position: 50% 50%, 50% 50%;
		filter: blur(10px) invert(100%);
		mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);
	
		&::after {
			content: '';
			position: absolute;
			inset: 0;
			background-image: var(--stripes), var(--rainbow);
			background-size: 200%, 100%;
			animation: smoothBg 60s linear infinite;
			background-attachment: fixed;
			mix-blend-mode: difference;
		}

		@include mq($sm) {
			min-height: 70vh;
		}
	}

	h1 {
		font-size: calc(0.6rem - -5vw);
		position: relative;
		line-height: 1.2;
	}

	&.dark-mode {
		background-color: $black;
		--stripe-color: #000;

		.rays__hero,
		.rays__hero::after {
			filter: blur(10px) opacity(50%) saturate(200%);
		}
	}
}

#switch {
	appearance: none;
	opacity: 0;
}

[for="switch"] {
	cursor: pointer;
	will-change: transform;
	padding: 0.5rem;
	transition: $dur $ease;
	text-transform: uppercase;

	@include hover {
		transform: scale(1.4);
		transition: $dur $ease;
	}
}

@keyframes smoothBg {
	from {
		background-position: 50% 50%, 50% 50%;
	}

	to {
		background-position: 350% 50%, 350% 50%;
	}
}